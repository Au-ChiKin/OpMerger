<profiling>
	<head>
		<unit>Î¼s</unit>
	<date>Tuesday, August 18&lt;sup&gt;th&lt;/sup&gt; 2020 at &lt;b&gt;17:10:13&lt;/b&gt;</date>
	</head>

	<!-- List tasks -->
	<task>
		<id>1</id>
		<name>Read Buffer</name>
	</task>
	<task>
		<id>2</id>
		<name>Write Buffer</name>
	</task>
	<task>
		<id>3</id>
		<name>Read Image</name>
	</task>
	<task>
		<id>4</id>
		<name>Write Image</name>
	</task>
	<task>
		<id>5</id>
		<name>Map Buffer</name>
	</task>
	<task>
		<id>6</id>
		<name>Unmap memory object</name>
	</task>
	<task>
		<id>7</id>
		<name>Map Image</name>
	</task>
	<task>
		<id>8</id>
		<name>Copy Buffer to Buffer</name>
	</task>
	<task>
		<id>9</id>
		<name>Copy Image to Image</name>
	</task>
	<task>
		<id>94135103718608</id>
		<name>selectKernel1</name>
	</task>
	<task>
		<id>94135105567568</id>
		<name>compactKernel</name>
	</task>

	<!-- List devices -->
	<device><!-- device->id = 94135094610256 -->
		<name>Quadro K5200</name>
		<details>
			<detail>
				<name>CL_DEVICE_VENDOR</name>
				<value>NVIDIA Corporation</value>
				<help>Vendor name string.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_TYPE</name>
				<value>CL_DEVICE_TYPE_GPU</value>
				<help>The OpenCL device type. Currently supported values are one of or a combination of: CL_DEVICE_TYPE_CPU, CL_DEVICE_TYPE_GPU, CL_DEVICE_TYPE_ACCELERATOR, or CL_DEVICE_TYPE_DEFAULT.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_ADDRESS_BITS</name>
				<value>64</value>
				<help>The default compute device address space size specified as an unsigned integer value in bits. Currently supported values are 32 or 64 bits.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_EXTENSIONS</name>
				<value>cl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_copy_opts cl_khr_gl_event cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics cl_kernel_attribute_nv</value>
				<help>Returns a list of extension names</help>
			</detail>
			<detail>
				<name>CL_DEVICE_VERSION</name>
				<value>OpenCL 1.2 CUDA</value>
				<help>OpenCL version string. Returns the OpenCL version supported by the device. This version string has the following format::
OpenCL&lt;space&gt;&lt;major_version.minor_version&gt;&lt;space&gt;&lt;vendor-specific information&gt;
The major_version.minor_version value returned will be 1.0.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_GLOBAL_MEM_CACHE_SIZE</name>
				<value>196608</value>
				<help>Size of global memory cache in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_GLOBAL_ MEM_CACHELINE_SIZE</name>
				<value>128</value>
				<help> Size of global memory cache line in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_GLOBAL_MEM_SIZE</name>
				<value>8515813376</value>
				<help>Size of global device memory in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_LOCAL_MEM_SIZE</name>
				<value>49152</value>
				<help>Size of local device memory in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_MAX_WORK_GROUP_SIZE</name>
				<value>1024</value>
				<help>Maximum number of work-items in a work-group executing a kernel on a single compute unit, using the data parallel execution model. (Refer to clEnqueueNDRangeKernel). The minimum value is 1. </help>
			</detail>
			<detail>
				<name>CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS</name>
				<value>3</value>
				<help>Maximum dimensions that specify the global and local work-item IDs used by the data parallel execution model. (Refer to clEnqueueNDRangeKernel). The minimum value is 3 for devices that are not of type CL_DEVICE_TYPE_CUSTOM.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_MAX_WORK_ITEM_SIZES</name>
				<value>[1024; 1024; 64]</value>
				<help> Maximum number of work-items that can be specified in each dimension of the work-group to clEnqueueNDRangeKernel.Returns n size_t entries, where n is the value returned by the query for CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_MEM_BASE_ADDR_ALIGN</name>
				<value>4096</value>
				<help>The minimum value is the size (in bits) of the largest OpenCL built-in data type supported by the device (long16 in FULL profile, long16 or int16 in EMBEDDED profile) for devices that are not of type CL_DEVICE_TYPE_CUSTOM. </help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF</name>
				<value>0</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
</details>
		<stream>
			<name>Queue 1</name>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>759261</start>
				<end>759381</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8747</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>759653</start>
				<end>759744</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>759637</ocl_queued>
				<ocl_submit>759643</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>760099</start>
				<end>760119</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>760028</ocl_queued>
				<ocl_submit>760032</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>760146</start>
				<end>760148</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>119</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>760168</start>
				<end>760185</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7846</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>760404</start>
				<end>760525</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8687</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>760544</start>
				<end>760628</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>760535</ocl_queued>
				<ocl_submit>760538</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>760629</start>
				<end>760649</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>760557</ocl_queued>
				<ocl_submit>760559</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>760669</start>
				<end>760671</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>140</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>760690</start>
				<end>760707</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7953</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>760832</start>
				<end>760951</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8846</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>760970</start>
				<end>761054</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>760962</ocl_queued>
				<ocl_submit>760965</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>761061</start>
				<end>761082</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>760984</ocl_queued>
				<ocl_submit>760986</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>761099</start>
				<end>761101</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>123</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>761118</start>
				<end>761135</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7670</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>761259</start>
				<end>761378</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8787</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>761399</start>
				<end>761481</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>761390</ocl_queued>
				<ocl_submit>761394</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>761484</start>
				<end>761506</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>761413</ocl_queued>
				<ocl_submit>761415</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>761524</start>
				<end>761526</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>140</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>761544</start>
				<end>761561</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7968</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>761686</start>
				<end>761805</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8837</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>761823</start>
				<end>761905</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>761814</ocl_queued>
				<ocl_submit>761817</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>761914</start>
				<end>761935</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>761838</ocl_queued>
				<ocl_submit>761841</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>761951</start>
				<end>761954</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>121</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>761970</start>
				<end>761987</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7699</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>762121</start>
				<end>762240</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8782</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>762261</start>
				<end>762344</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>762253</ocl_queued>
				<ocl_submit>762256</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>762344</start>
				<end>762364</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>762272</ocl_queued>
				<ocl_submit>762275</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>762384</start>
				<end>762386</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>140</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>762402</start>
				<end>762418</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7937</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>762549</start>
				<end>762668</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8839</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>762685</start>
				<end>762771</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>762676</ocl_queued>
				<ocl_submit>762680</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>762774</start>
				<end>762793</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>762699</ocl_queued>
				<ocl_submit>762701</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>762810</start>
				<end>762812</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>131</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>762828</start>
				<end>762845</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7670</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>2</idTask><!-- task.name = Write Buffer -->
				<name>Write Buffer</name>
				<start>762972</start>
				<end>763091</end>
				<ocl_size>1048576</ocl_size>
				<ocl_bandwidth>8784</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>94135103718608</idTask><!-- task.name = selectKernel1 -->
				<name>selectKernel1</name>
				<start>763111</start>
				<end>763195</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>763102</ocl_queued>
				<ocl_submit>763106</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>94135105567568</idTask><!-- task.name = compactKernel -->
				<name>compactKernel</name>
				<start>763196</start>
				<end>763216</end>
				<ocl_global_work_size>16384</ocl_global_work_size>
				<ocl_local_work_size>256</ocl_local_work_size>
				<ocl_queued>763122</ocl_queued>
				<ocl_submit>763125</ocl_submit>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>763235</start>
				<end>763236</end>
				<ocl_size>256</ocl_size>
				<ocl_bandwidth>140</ocl_bandwidth>
			</taskInstance>
			<taskInstance>
				<idTask>1</idTask><!-- task.name = Read Buffer -->
				<name>Read Buffer</name>
				<start>763253</start>
				<end>763270</end>
				<ocl_size>131072</ocl_size>
				<ocl_bandwidth>7984</ocl_bandwidth>
			</taskInstance>
		</stream>
		<stream>
			<name>Queue 2</name>
		</stream>
	</device>
</profiling>
