<profiling>
	<head>
		<unit>Î¼s</unit>
	<date>Thursday, August 27&lt;sup&gt;th&lt;/sup&gt; 2020 at &lt;b&gt;18:34:32&lt;/b&gt;</date>
	</head>

	<!-- List tasks -->
	<task>
		<id>1</id>
		<name>Read Buffer</name>
	</task>
	<task>
		<id>2</id>
		<name>Write Buffer</name>
	</task>
	<task>
		<id>3</id>
		<name>Read Image</name>
	</task>
	<task>
		<id>4</id>
		<name>Write Image</name>
	</task>
	<task>
		<id>5</id>
		<name>Map Buffer</name>
	</task>
	<task>
		<id>6</id>
		<name>Unmap memory object</name>
	</task>
	<task>
		<id>7</id>
		<name>Map Image</name>
	</task>
	<task>
		<id>8</id>
		<name>Copy Buffer to Buffer</name>
	</task>
	<task>
		<id>9</id>
		<name>Copy Image to Image</name>
	</task>
	<task>
		<id>94678678922560</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683522048</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683524096</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683526176</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683528224</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683530304</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683532352</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683534432</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683536480</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683538560</id>
		<name>clearKernel</name>
	</task>
	<task>
		<id>94678683540608</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683542688</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683544784</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683546912</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683549008</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683551136</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683553232</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683555360</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683557456</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683559584</id>
		<name>computeOffsetKernel</name>
	</task>
	<task>
		<id>94678683776416</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683778496</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683780592</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683782720</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683784816</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683786944</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683789040</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683791168</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683793264</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683795392</id>
		<name>computePointersKernel</name>
	</task>
	<task>
		<id>94678683797488</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683799616</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683801664</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683803744</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683805792</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683807872</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683809920</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683812000</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683814048</id>
		<name>reduceKernel</name>
	</task>
	<task>
		<id>94678683816128</id>
		<name>reduceKernel</name>
	</task>

	<!-- List devices -->
	<device><!-- device->id = 94678673707632 -->
		<name>Quadro K5200</name>
		<details>
			<detail>
				<name>CL_DEVICE_VENDOR</name>
				<value>NVIDIA Corporation</value>
				<help>Vendor name string.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_TYPE</name>
				<value>CL_DEVICE_TYPE_GPU</value>
				<help>The OpenCL device type. Currently supported values are one of or a combination of: CL_DEVICE_TYPE_CPU, CL_DEVICE_TYPE_GPU, CL_DEVICE_TYPE_ACCELERATOR, or CL_DEVICE_TYPE_DEFAULT.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_ADDRESS_BITS</name>
				<value>64</value>
				<help>The default compute device address space size specified as an unsigned integer value in bits. Currently supported values are 32 or 64 bits.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_EXTENSIONS</name>
				<value>cl_khr_global_int32_base_atomics cl_khr_global_int32_extended_atomics cl_khr_local_int32_base_atomics cl_khr_local_int32_extended_atomics cl_khr_fp64 cl_khr_byte_addressable_store cl_khr_icd cl_khr_gl_sharing cl_nv_compiler_options cl_nv_device_attribute_query cl_nv_pragma_unroll cl_nv_copy_opts cl_khr_gl_event cl_nv_create_buffer cl_khr_int64_base_atomics cl_khr_int64_extended_atomics cl_kernel_attribute_nv</value>
				<help>Returns a list of extension names</help>
			</detail>
			<detail>
				<name>CL_DEVICE_VERSION</name>
				<value>OpenCL 1.2 CUDA</value>
				<help>OpenCL version string. Returns the OpenCL version supported by the device. This version string has the following format::
OpenCL&lt;space&gt;&lt;major_version.minor_version&gt;&lt;space&gt;&lt;vendor-specific information&gt;
The major_version.minor_version value returned will be 1.0.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_GLOBAL_MEM_CACHE_SIZE</name>
				<value>196608</value>
				<help>Size of global memory cache in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_GLOBAL_ MEM_CACHELINE_SIZE</name>
				<value>128</value>
				<help> Size of global memory cache line in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_GLOBAL_MEM_SIZE</name>
				<value>8515813376</value>
				<help>Size of global device memory in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_LOCAL_MEM_SIZE</name>
				<value>49152</value>
				<help>Size of local device memory in bytes.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_MAX_WORK_GROUP_SIZE</name>
				<value>1024</value>
				<help>Maximum number of work-items in a work-group executing a kernel on a single compute unit, using the data parallel execution model. (Refer to clEnqueueNDRangeKernel). The minimum value is 1. </help>
			</detail>
			<detail>
				<name>CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS</name>
				<value>3</value>
				<help>Maximum dimensions that specify the global and local work-item IDs used by the data parallel execution model. (Refer to clEnqueueNDRangeKernel). The minimum value is 3 for devices that are not of type CL_DEVICE_TYPE_CUSTOM.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_MAX_WORK_ITEM_SIZES</name>
				<value>[1024; 1024; 64]</value>
				<help> Maximum number of work-items that can be specified in each dimension of the work-group to clEnqueueNDRangeKernel.Returns n size_t entries, where n is the value returned by the query for CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_MEM_BASE_ADDR_ALIGN</name>
				<value>4096</value>
				<help>The minimum value is the size (in bits) of the largest OpenCL built-in data type supported by the device (long16 in FULL profile, long16 or int16 in EMBEDDED profile) for devices that are not of type CL_DEVICE_TYPE_CUSTOM. </help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE</name>
				<value>1</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
			<detail>
				<name>CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF</name>
				<value>0</value>
				<help>Preferred native vector width size for built-in scalar types that can be put into vectors. The vector width is defined as the number of scalar elements that can be stored in the vector.</help>
			</detail>
</details>
		<stream>
			<name>Queue 1</name>
		</stream>
		<stream>
			<name>Queue 2</name>
		</stream>
		<stream>
			<name>Queue 3</name>
		</stream>
		<stream>
			<name>Queue 4</name>
		</stream>
		<stream>
			<name>Queue 5</name>
		</stream>
	</device>
</profiling>
